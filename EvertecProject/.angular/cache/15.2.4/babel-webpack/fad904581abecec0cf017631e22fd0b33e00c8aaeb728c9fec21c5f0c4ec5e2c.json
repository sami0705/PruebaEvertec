{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nlet EditComponent = class EditComponent {\n  constructor(activerouter, router, api, alert) {\n    this.activerouter = activerouter;\n    this.router = router;\n    this.api = api;\n    this.alert = alert;\n    // En el componente, puedes crear un objeto de tipo PersonPruebaI con valores por defecto para todas las propiedades requeridas:\n    this.inforUser = {\n      idPerson: 0,\n      name: '',\n      lastName: '',\n      birthdate: new Date(),\n      photo: '',\n      idMaritalStatus: 0,\n      haveBrothers: false\n    };\n    this.haveBrothers = \"false\";\n    this.birthdate = \"1990-01-01\";\n  }\n  ngOnInit() {\n    let userId = Number(this.activerouter.snapshot.paramMap.get('id'));\n    this.getUser(userId);\n  }\n  /** Consulta un usuario por id */\n  getUser(userId) {\n    this.api.getUser(userId).subscribe(data => {\n      this.inforUser = data;\n      const datePipe = new DatePipe('en-CO');\n      this.birthdate = datePipe.transform(this.inforUser.birthdate, 'shortDate');\n      this.haveBrothers = this.inforUser.haveBrothers ? \"true\" : \"false\";\n      console.log(this.inforUser);\n      // Inicializar el objeto person con el valor del idPerson\n      //this.inforUser.idPerson = this.inforUser.idPerson;\n      /* this.editForm.setValue({\r\n         'idPerson': this.inforUser.idPerson,\r\n         /*'name': this.inforUser.name,\r\n         'lastName': this.inforUser.lastName,\r\n         'birthdate': datePipe.transform(this.inforUser.birthdate, 'dd/MM/yyyy'),\r\n         'photo':    this.inforUser.photo,\r\n         'idMaritalStatus':this.inforUser.idMaritalStatus,\r\n         'haveBrothers': this.inforUser.haveBrothers\r\n       })*/\n    });\n  }\n  //editar un usuario\n  editUser() {\n    this.inforUser.haveBrothers = this.parseBoolean(this.haveBrothers);\n    console.log(this.inforUser);\n    //editar usuario\n    this.api.putUser(this.inforUser).subscribe(data => {\n      /*if(data.status === 200)\r\n        this.alert.showSuccess(\"Usuario modificado exitosamente\",\"Edición Exitosa\");\r\n      else\r\n        this.alert.showError(\"Se presentó un errr al editar el usuario\",\"Error\");*/\n      console.log(data);\n      this.alert.showSuccess(\"Usuario modificado exitosamente\", \"Edición Exitosa\");\n      this.router.navigate(['user']);\n    });\n  }\n  //Convierte un string a boolean\n  parseBoolean(value) {\n    return value === 'true';\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAKjD,SAASC,QAAQ,QAAQ,iBAAiB;AAWnC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAExBC,YAAoBC,YAA2B,EAAUC,MAAa,EAAUC,GAAqB,EAAUC,KAAmB;IAA9G,iBAAY,GAAZH,YAAY;IAAyB,WAAM,GAANC,MAAM;IAAiB,QAAG,GAAHC,GAAG;IAA4B,UAAK,GAALC,KAAK;IAGpH;IACD,cAAS,GAAY;MACpBC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBC,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE,CAAC;MAClBC,YAAY,EAAE;KACf;IAED,iBAAY,GAAU,OAAO;IAC7B,cAAS,GAAU,YAAY;EAb7B;EAeFC,QAAQ;IACN,IAAIC,MAAM,GAASC,MAAM,CAAC,IAAI,CAACd,YAAY,CAACe,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxE,IAAI,CAACC,OAAO,CAACL,MAAM,CAAC;EACtB;EAGA;EACAK,OAAO,CAACL,MAAc;IAEtB,IAAI,CAACX,GAAG,CAACgB,OAAO,CAACL,MAAM,CAAC,CAACM,SAAS,CAACC,IAAI,IAAG;MACtC,IAAI,CAACC,SAAS,GAAED,IAAI;MACrB,MAAME,QAAQ,GAAG,IAAIzB,QAAQ,CAAC,OAAO,CAAC;MACtC,IAAI,CAACU,SAAS,GAAGe,QAAQ,CAACC,SAAS,CAAC,IAAI,CAACF,SAAS,CAACd,SAAS,EAAE,WAAW,CAAE;MAC3E,IAAI,CAACI,YAAY,GAAG,IAAI,CAACU,SAAS,CAACV,YAAY,GAAE,MAAM,GAAE,OAAO;MAEhEa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,SAAS,CAAC;MAE1B;MACD;MACA;;;;;;;;;IASD,CAAC,CAAC;EACJ;EAEA;EACAK,QAAQ;IACN,IAAI,CAACL,SAAS,CAACV,YAAY,GAAG,IAAI,CAACgB,YAAY,CAAC,IAAI,CAAChB,YAAY,CAAC;IAClEa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,SAAS,CAAC;IAE3B;IACA,IAAI,CAACnB,GAAG,CAAC0B,OAAO,CAAC,IAAI,CAACP,SAAS,CAAC,CAACF,SAAS,CAACC,IAAI,IAAG;MAEhD;;;;MAIEI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACjB,IAAI,CAACjB,KAAK,CAAC0B,WAAW,CAAC,iCAAiC,EAAC,iBAAiB,CAAC;MAC7E,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC,CAAC;EACJ;EAEA;EACQH,YAAY,CAACI,KAAa;IAChC,OAAOA,KAAK,KAAK,MAAM;EACzB;CAEC;AAzEYjC,aAAa,eAPzBF,SAAS,CAAC;EACToC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GAGWpC,aAAa,CAyEzB;SAzEYA,aAAa","names":["Component","DatePipe","EditComponent","constructor","activerouter","router","api","alert","idPerson","name","lastName","birthdate","Date","photo","idMaritalStatus","haveBrothers","ngOnInit","userId","Number","snapshot","paramMap","get","getUser","subscribe","data","inforUser","datePipe","transform","console","log","editUser","parseBoolean","putUser","showSuccess","navigate","value","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\niyir\\Documents\\GitHub\\PruebaEvertec\\EvertecProject\\src\\app\\vistas\\edit\\edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router'\nimport { PersonI } from 'src/app/models/person.interface';\nimport {ApiEvertecService} from '../../servicios/api/api-evertec.service';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport {AlertsService} from '../../servicios/alerts/alerts.service';\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\n\n\nexport class EditComponent implements OnInit {\n \n  constructor(private activerouter:ActivatedRoute, private router:Router, private api:ApiEvertecService, private alert:AlertsService){\n\n  }\n  // En el componente, puedes crear un objeto de tipo PersonPruebaI con valores por defecto para todas las propiedades requeridas:\n inforUser: PersonI = {\n  idPerson: 0,\n  name: '',\n  lastName: '',\n  birthdate: new Date(),\n  photo: '',\n  idMaritalStatus: 0,\n  haveBrothers: false\n};\n\nhaveBrothers:string = \"false\";\nbirthdate:string = \"1990-01-01\";\n\nngOnInit(): void{\n  let userId:number= Number(this.activerouter.snapshot.paramMap.get('id'));\n  this.getUser(userId);  \n}\n\n\n/** Consulta un usuario por id */\ngetUser(userId: number)\n{\nthis.api.getUser(userId).subscribe(data =>{   \n    this.inforUser= data;\n   const datePipe = new DatePipe('en-CO');\n   this.birthdate = datePipe.transform(this.inforUser.birthdate, 'shortDate')!;\n   this.haveBrothers = this.inforUser.haveBrothers? \"true\": \"false\";\n\n   console.log(this.inforUser);\n\n    // Inicializar el objeto person con el valor del idPerson\n   //this.inforUser.idPerson = this.inforUser.idPerson;\n   /* this.editForm.setValue({\n      'idPerson': this.inforUser.idPerson,\n      /*'name': this.inforUser.name,\n      'lastName': this.inforUser.lastName,\n      'birthdate': datePipe.transform(this.inforUser.birthdate, 'dd/MM/yyyy'),\n      'photo':    this.inforUser.photo,\n      'idMaritalStatus':this.inforUser.idMaritalStatus,\n      'haveBrothers': this.inforUser.haveBrothers\n    })*/\n  })\n}\n\n//editar un usuario\neditUser() {\n  this.inforUser.haveBrothers = this.parseBoolean(this.haveBrothers);\n  console.log(this.inforUser);\n\n  //editar usuario\n  this.api.putUser(this.inforUser).subscribe(data =>{ \n    \n    /*if(data.status === 200)\n      this.alert.showSuccess(\"Usuario modificado exitosamente\",\"Edición Exitosa\");\n    else\n      this.alert.showError(\"Se presentó un errr al editar el usuario\",\"Error\");*/\n      console.log(data);\n      this.alert.showSuccess(\"Usuario modificado exitosamente\",\"Edición Exitosa\");\n    this.router.navigate(['user']);\n  });\n}\n\n//Convierte un string a boolean\nprivate parseBoolean(value: string): boolean {\n  return value === 'true';\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}